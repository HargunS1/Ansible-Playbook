---
- hosts: localhost  # Specify localhost as the target host
  connection: local  # Use the local connection method
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
  vars:
    VERSION: "1.26"
  tasks:
     - name: to update machine
       shell: |
               dnf update -y
     - name: to stop firewall
       shell: |
               systemctl stop firewalld
       register: command_output

     - debug:
                var: command_output.stdout_lines
 
     - name: to disable firewall
       shell: |
               systemctl disable firewalld
       register: command_output

     - debug:
               var: command_output.stdout_lines


     - name: disabling swap as it’s required for kubelet
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

     - name: need to disable selinux
       shell: |
               sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

     - name: to install traffic utility package
       shell: |
               sudo dnf install -y iproute-tc


     - name: Creating a configuration file for cri-o, our cri-o runtime
       file:
         path: "/etc/modules-load.d/k8s.conf"
         state: "touch"

     - name: setting up pre-requisites for containerd
       blockinfile:
         path: "/etc/modules-load.d/k8s.conf"
         block: |
               overlay
               br_netfilter

     - name: loading required modules
       shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter
     
     - name: configuring network settings for Kube
       file:
         path: "/etc/sysctl.d/k8s.conf"
         state: "touch"
      
     - name: adding required settings for containerd
       blockinfile:
         path: "/etc/sysctl.d/k8s.conf"
         block: |
                 net.bridge.bridge-nf-call-iptables = 1
                 net.ipv4.ip_forward = 1
                 net.bridge.bridge-nf-call-ip6tables = 1

     - name: make settings applicable without restart
       command: sudo sysctl --system

     - name: now we have to set version for crio
       shell: |
               export VERSION=1.26

     - name: installing cri-o and settings its config. restart as well.
       shell: |
               sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/devel:kubic:libcontainers:stable.repo
     
     - name: installing second repo of cri-o
       shell: |       
               sudo curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:{{ VERSION }}.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ VERSION }}/CentOS_8/devel:kubic:libcontainers:stable:cri-o:{{ VERSION }}.repo

     - name: now we will install cri-o
       shell: |
               sudo dnf install -y cri-o
     
     - name: enable cri-o
       shell: |       
               sudo systemctl enable crio
               sudo systemctl start crio

     - name: Create a kube repo file
       file:
         path: "/etc/yum.repos.d/kubernetes.repo"
         state: "touch"

     - name: write repo information in kube repo file
       blockinfile:
         path: "/etc/yum.repos.d/kubernetes.repo"
         block: |
                 [kubernetes]
                 name=Kubernetes
                 baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
                 enabled=1
                 gpgcheck=1
                 repo_gpgcheck=1
                 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

     - name: install kubernetes
       shell: |
               sudo dnf install -y kubelet kubeadm kubectl
     
     - name: start kublet service
       shell: | 
               sudo sudo systemctl enable kubelet
               sudo systemctl start kubelet

     - name: disabling swap as it’s required for kubelet
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

     - name: initializing the kubernetes cluster
       shell: |
               sudo kubeadm init --pod-network-cidr=192.168.10.0/16

     - name: to create .kube directory
       shell: |
               mkdir -p $HOME/.kube

     - name: to copy /etc/kubernets/config it to .kube directory
       shell: |
               sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
               sudo chown $(id -u):$(id -g) $HOME/.kube/config

     - name: to taint nodes
       shell: |
               kubectl taint nodes --all node-role.kubernetes.io/control-plane-


     - name: to install calico cni
       shell: |
               kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml       
